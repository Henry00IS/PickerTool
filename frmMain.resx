<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAcAAAAMAAAAEAAAABQAAAAYAAAAGwAAAB0AAAAfAAAAIAAA
        ACIAAAAjAAAAJAAAACMAAAAjAAAAIwAAACMAAAAiAAAAIQAAACAAAAAfAAAAHgAAABwAAAAbAAAAGQAA
        ABcAAAAVAAAAFAAAABIAAAAQAAAADgAAAAwAAAALAAAACQAAAAcAAAAGAAAABAAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAADgAAAB4AAAAuAAAAPgAAAEsAAABQAAAAUgAAAFIAAABSAAAAUQAA
        AE8AAABOAAAATAAAAEoAAABIAAAARgAAAEQAAABBAAAAPwAAAD0AAAA7AAAAOQAAADYAAAA0AAAAMgAA
        ADAAAAAtAAAAKwAAACkAAAAnAAAAJQAAACIAAAAgAAAAHgAAABwAAAAZAAAAFwAAABUAAAASAAAAEAAA
        AA4AAAALAAAACQAAAAYAAAAEAAAAAgAAAAAAAAAAAgICBQAAABAAAAAZAQEBIQAAACgAAAAuAAAAMgAA
        ADUAAAA3AAAAOQAAADoAAAA6AAAAOgAAADkAAAA5AAAAOAAAADcAAAA2AAAANAAAADMAAAAxAAAAMAAA
        AC4AAAAsAAAAKgAAACgAAAAmAAAAJAAAACIAAAAgAAAAHgAAABwAAAAaAAAAGAAAABYAAAAUAAAAEQAA
        AA8AAAANAAAACwAAAAkAAAAHAAAABQAAAAMAAAACAAAAAAAAAABhX18ARENDAI6MjABmZGQAExMTAA4O
        DgANDQ0AAAAAAAAAAAAAAAABAAAAAwAAAAQAAAAGAAAABwAAAAcAAAAIAAAACQAAAAoAAAAKAAAACwAA
        AAsAAAALAAAACwAAAAsAAAAKAAAACgAAAAkAAAAJAAAACAAAAAcAAAAGAAAABQAAAAQAAAAEAAAAAwAA
        AAIAAAACAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AlEGBgaYHR0dSwAAAAAAAAAACgoKAAAAAAMFBQUBNjY2AD8/PwAUFBQADg4OAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAwMDaT4+Pv8eHh7/AAAA/QsLC5oEBAQjDQ0NAQwMDAAnJiYAEhERASMjIwEAAAAAAgICAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAMR0ZG21lbWP8ZGhn7AAAA/gEBAf8AAAD3AAAAygICAosKCgo6IiIiAQAA
        AAArKysBGBgYABoZGQAWFRUAzMvLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIR0dHz5CPkP8oKCj+AAAA/wEBAf0AAAD/AAAA/wAA
        AP8AAAD/Dw4OqVJRURVpaWkAMjIyAhgYGAAEBQUAAAAAAEhHRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBcXSj8+Pvuampr/BwcH/wAA
        AP8AAAD/CQkJ/RYWFvwMDAz9AQEB/xUVFcpHRkYhRENDAC4tLQIPDg4AAAAAAHJzcwA8PDwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAA
        AGiHh4f/bG1s/gAAAP8ICAj/NTU1/2lpaf9tbW3/ICAg/AAAAP8TExPYQkJCLjY1NQAnJycCAAAAAH9/
        fwBUVFQAREREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AQAAAABdXV3ErK6s/wAAAP0JCQn/R0dH/62trf/Ly8v/cnJy/yYmJv0AAAD/ERER5Ts7
        OzwuLS0AJCMjAo2NjQBaWVkAUVBQAEtLSwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA9PT0AR0ZGAz8/PwAzMzNruru6/yMjI/0AAAD/LCws/4qKiv/e3t7/zc3N/3x8
        fP8vLy/9AAAA/w8ODu8zMjJMFBMTABwcHAJhYWEASUlJAEVFRQBEREQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8PDwAJCMkAQAAAAAAAAAjqamp8llZWf8AAAD/DAwM/1NT
        U/+enp7/3t7e/9bW1v+Ghob/Nzc3/gICAv8LCwv2Li4uXQAAAAAKCgoCU1JSAD8+PgA6OTkAPDs7AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYACwAAAAAAAAAAAAAAAACC+bQCn//uAFSV
        b4p/yp7/ndi2/HjLm/+V2bH/o+C8/53guf+V3rL/ec+a/2rDi/xovoX/Wp5vn4X/rwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxPDQAAAAAABsK
        EQAcFRkAAAAAAAAAAAZdpHuwi9Kp/4rTqfyC0aP9rePD/qTivf+g4rv+k9yw/HLOlf9muoTzTXxcLk+D
        XwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMkE5ADxVSAA/Y08AO2JLAQAAAAAZLiERYad+qIPNov91z5v/nd+4/7Loyf+p5sL/mOG3/3DH
        k/RYmnFUbs2RAHPNlgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAENmUgBQh2cATINjAD5pUAD///8AAAAAA1eQblZmtYe6c8aV5pTV
        r+6R1K3ddL6Tn06GZS1y8KQAZruGAZf/ygAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNg2QAWZx1AFuieQBPhGYBbceUAScT
        GQAAAAABK0Q1FzRpSiMQKRoN2P//AKD/4ABotogBAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAO///////wAAw///////AACAf/////8AAIAf/////wAAwA//////AADgB/////8AAOAD
        /////wAA8AH/////AADwAP////8AAPAAf////wAA+AAf////AAD8AA////8AAP4AB////wAA/wAD////
        AAD/wAH///8AAP/gAP///wAA//AAf///AAD/+AA///8AAP/8AB///wAA//4AD///AAD//wAH//8AAP//
        gAH//wAA///AAA//AAD//+AAB/8AAP//+AAH/wAA///8AAP/AAD///4AA/8AAP///wAB/wAA////gAH/
        AAD///+AAP8AAP///4AAfwAA////gAAfAAD////AAA8AAP///+AABwAA////8AADAAD////+AAEAAP//
        //+AAQAA/////8ABAAD/////4AEAAP/////gAQAA//////ADAAD/////+AcAAP/////+DwAA////////
        AAA=
</value>
  </data>
</root>